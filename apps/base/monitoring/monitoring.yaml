---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  interval: 24h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "69.x"
      sourceRef:
        kind: HelmRepository
        name: prometheus-stack
        namespace: monitoring
      interval: 12h
  values:
    crds:
      enabled: true
      upgradeJob:
        enabled: false
        serviceAccount:
          create: true
          name: "service-account-monitoring"
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-dev
        hosts:
        - alertmanager.example.com
        pathType: ImplementationSpecific
        tls:
        - secretName: alertmanager-tls
          hosts:
          - alertmanager.example.com

    grafana:
      adminUser: admin
      adminPassword: changeit
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-dev
        hosts:
        - monitoring.example.com
        tls:
        - secretName: monitoring-tls
          hosts:
          - monitoring.example.com
      persistence:
        enabled: true
        storageClassName: "storageclassname"
        size: 5Gi

      sidecar:
        datasources:
          enabled: false
          defaultDatasourceEnabled: false
          isDefaultDatasource: false

    kubeApiServer:
      enabled: true
      tlsConfig:
        serverName: kubernetes
        insecureSkipVerify: false

    kubelet:
      enabled: true

    kubeControllerManager:
      enabled: true

    coreDns:
      enabled: true

    kubeDns:
      enabled: true

    kubeEtcd:
      enabled: true

    kubeScheduler:
      enabled: true

    kubeProxy:
      enabled: true

    kube-state-metrics:
      rbac:
        create: true
      releaseLabel: true

      selfMonitor:
        enabled: true

    nodeExporter:
      enabled: true
      operatingSystems:
        linux:
          enabled: true
        aix:
          enabled: true
        darwin:
          enabled: true
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-dev
        hosts:
        - prometheus.example.com
        pathType: ImplementationSpecific
        tls:
        - secretName: prometheus-tls
          hosts:
          - prometheus.example.com

    ## Setting to true produces cleaner resource names, but requires a data migration because the name of the persistent volume changes. Therefore this should only be set once on initial installation.
    ##
    cleanPrometheusOperatorObjectNames: true